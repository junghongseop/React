-보기 쉽고 익숙하다-
JSX를 사용하는 편이 더 가독성이 높고 작성하기 쉬움
HTML코드를 작성하는 것과 비슷 → JSX 사용 이유

-더욱 높은 활용도-
JSX에서는 우리가 알고 있는 div나 span같은 HTML태그를 사용할 수 있을 뿐만 아니라, 컴포넌트도 JSX안에서 작성이 가능

import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();

document.getElementById를 사용하여 id가 root인 HTML요소를 찾고 리액ㅌ느 컴포넌트를 보여줄수 있는 루트 인스턴스를 creatRoot함수를 사용하여 생성
root.render함수에 JSX코드를 인자로 넣어서 보여주고 싶은 컴포넌트를 화면에 보여줌

React.StricMode라는 컴포넌트가 사용
리액트 프로젝트에서 앞으로 사라질 레거시 기능을 사용할 때 경고를 주고, 미래의 리액트 버전에 도입될 기능들이 정상적으로 호환될 수 있도록 유도하는 개발환경에서만 활성화되는 디버깅용 컴포넌트

reportWebVitals는 웹 성능을 측정하는 도구(크게 상관없음)


